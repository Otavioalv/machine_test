version: '3.8'

services:
  mysql:
    image: mysql:9.3
    container_name: mysql_flask_machine
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: flsk_machine_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/01_fictitious_data.sql:/docker-entrypoint-initdb.d/fictitious_data.sql
    restart: unless-stopped
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 10s
      timeout: 5s
      retries: 55

  flask-api-machine:
    build:
      context: .
      dockerfile: Dockerfile.flask
    container_name: flask_api
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - FLASK_ENV=development
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=flsk_machine_db
      - DB_USER=root
      - DB_PASSWORD=123456
    ports:
      - "5000:5000"
    restart: unless-stopped
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  machine_ui:
    build:
      context: ./machine_ui
      dockerfile: Dockerfile.frontend
    container_name: react_frontend
    ports:
      - "80:80"
    depends_on:
      - flask-api-machine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:


# docker-compose up --build -d